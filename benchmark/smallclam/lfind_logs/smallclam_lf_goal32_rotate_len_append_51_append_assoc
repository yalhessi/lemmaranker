Provable and Useful in Completing Stuck Goal

Useful in Completing Stuck Goal
Lemma conj28eqsynthconj6 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv1) (append (append lv1 lv0) lv2)) ((append lv0 (append lv2 lv1))))

Lemma conj30eqsynthconj6 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv0) lv1)) ((append lv0 (append lv1 lv2))))

Lemma conj28eqsynthconj4 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv1) (append (append lv1 lv0) lv2)) ((append lv0 (append lv2 (rotate Zero lv1)))))

Lemma conj28eqsynthconj3 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv1) (append (append lv1 lv0) lv2)) ((append lv0 (append lv2 (append Nil lv1)))))

Lemma conj28eqsynthconj1 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv1) (append (append lv1 lv0) lv2)) ((append lv0 (rotate Zero (append lv2 lv1)))))

Lemma conj30eqsynthconj4 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv0) lv1)) ((append lv0 (append lv1 (rotate Zero lv2)))))

Lemma conj30eqsynthconj3 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv0) lv1)) ((append lv0 (append lv1 (append Nil lv2)))))

Lemma conj30eqsynthconj1 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv0) lv1)) ((append lv0 (rotate Zero (append lv1 lv2)))))

Lemma conj43synthconj2 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst) (lv3 : lst), (@eq lst (rotate (len lv3) (append (append lv3 lv1) (Cons lv0 Nil))) (append lv1 (Cons lv0 lv3)))

Lemma conj44eqsynthconj6 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv1) (Cons lv0 Nil))) ((append lv1 (Cons lv0 lv2))))

Lemma conj32eqsynthconj4 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst) (lv3 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv1) (Cons lv0 lv3))) ((append lv1 (Cons lv0 (append lv3 lv2)))))

Lemma conj33eqsynthconj4 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst) (lv3 : lst), (@eq lst (rotate (len lv3) (append (append lv3 lv1) (Cons lv0 lv2))) ((append lv1 (Cons lv0 (append lv2 lv3)))))

Lemma conj44eqsynthconj4 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv1) (Cons lv0 Nil))) ((append lv1 (Cons lv0 (rotate Zero lv2)))))

Lemma conj44eqsynthconj3 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv1) (Cons lv0 Nil))) ((append lv1 (Cons lv0 (append Nil lv2)))))

Lemma conj44eqsynthconj1 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv1) (Cons lv0 Nil))) ((append lv1 (rotate Zero (Cons lv0 lv2)))))
Valid Lemmas
Lemma conj43synthconj1 : forall  (lv0 : lst), (@eq lst (rotate (len lv0) lv0) lv0)

Lemma conj43eqsynthconj1 : forall  (lv0 : lst), (@eq lst (lv0) ((rotate (len lv0) lv0)))

Lemma conj44eqsynthconj2 : forall  (lv0 : lst), (@eq natural (len lv0) ((len (rotate (Succ Zero) lv0))))

Lemma conj44synthconj1 : forall  (lv0 : lst) (lv1 : lst), (@eq lst (append lv0 (append lv1 Nil)) (append lv0 lv1))

Lemma conj44eqsynthconj1 : forall  (lv0 : lst) (lv1 : lst), (@eq lst (append lv0 lv1) ((append lv0 (append lv1 Nil))))

Lemma conj44eqsynthconj3 : forall  (lv0 : natural), (@eq lst (Cons lv0 Nil) ((rotate lv0 (Cons lv0 Nil))))

Lemma conj44eqsynthconj1 : forall  (lv0 : natural), (@eq lst (Cons lv0 Nil) ((Cons lv0 (rotate lv0 Nil))))

Lemma conj44eqsynthconj1 : forall  (lv0 : lst) (lv1 : lst), (@eq lst (append lv1 lv0) ((append lv1 (append lv0 Nil))))

Lemma conj23synthconj1 : forall  (lv0 : lst) (lv1 : lst), (@eq lst (append lv1 (append lv0 Nil)) (append lv1 lv0))

Lemma conj30eqsynthconj6 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv2 lv0) lv1) ((append lv2 (append lv0 lv1))))

Lemma conj28eqsynthconj6 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv1 lv0) lv2) ((append lv1 (append lv0 lv2))))

Lemma conj30eqsynthconj4 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv2 lv0) lv1) ((rotate Zero (append lv2 (append lv0 lv1)))))

Lemma conj30eqsynthconj2 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv2 lv0) lv1) ((append Nil (append lv2 (append lv0 lv1)))))

Lemma conj28eqsynthconj4 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv1 lv0) lv2) ((rotate Zero (append lv1 (append lv0 lv2)))))

Lemma conj28eqsynthconj2 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv1 lv0) lv2) ((append Nil (append lv1 (append lv0 lv2)))))

Lemma conj30eqsynthconj5 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv0) lv1)) ((append (append lv0 lv1) lv2)))

Lemma conj28eqsynthconj5 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv1) (append (append lv1 lv0) lv2)) ((append (append lv0 lv2) lv1)))

Lemma conj44eqsynthconj5 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv2 lv1) (Cons lv0 Nil)) ((append lv2 (append lv1 (Cons lv0 Nil)))))

Lemma conj33eqsynthconj6 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv3 lv1) (Cons lv0 lv2)) ((append lv3 (append lv1 (Cons lv0 lv2)))))

Lemma conj32eqsynthconj6 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv2 lv1) (Cons lv0 lv3)) ((append lv2 (append lv1 (Cons lv0 lv3)))))

Lemma conj17eqsynthconj6 : forall  (lv0 : lst) (lv1 : natural) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv3 lv2) (Cons lv1 lv0)) ((append lv3 (append lv2 (Cons lv1 lv0)))))

Lemma conj44eqsynthconj1 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv2 lv1) (Cons lv0 Nil)) ((append lv2 (rotate (Succ Zero) (Cons lv0 lv1)))))

Lemma conj42synthconj5 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append lv2 (append lv1 (Cons lv0 Nil)))) (append lv1 (Cons lv0 lv2)))

Lemma conj36eqsynthconj2 : forall  (lv0 : natural) (lv1 : lst) (lv2 : natural), (@eq lst (rotate lv2 (append lv1 (Cons lv0 Nil))) ((rotate (Succ Zero) (rotate lv2 (Cons lv0 lv1)))))

Lemma conj35eqsynthconj2 : forall  (lv0 : natural) (lv1 : natural) (lv2 : lst), (@eq lst (rotate lv0 (append lv2 (Cons lv1 Nil))) ((rotate (Succ Zero) (rotate lv0 (Cons lv1 lv2)))))

Lemma conj30eqsynthconj2 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv0) lv1)) ((append lv0 (append lv1 (append lv2 Nil)))))

Lemma conj28eqsynthconj2 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv1) (append (append lv1 lv0) lv2)) ((append lv0 (append lv2 (append lv1 Nil)))))

Lemma conj42synthconj1 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append lv2 (rotate (Succ Zero) (Cons lv0 lv1)))) (append lv1 (Cons lv0 lv2)))

Lemma conj44eqsynthconj2 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv1) (Cons lv0 Nil))) ((append lv1 (Cons lv0 (append lv2 Nil)))))

Lemma conj33synthconj3 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv1) (rotate lv0 (Cons lv0 Nil)))) (append lv1 (Cons lv0 lv2)))

Lemma conj33synthconj1 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (rotate (len lv2) (append (append lv2 lv1) (Cons lv0 (rotate lv0 Nil)))) (append lv1 (Cons lv0 lv2)))
