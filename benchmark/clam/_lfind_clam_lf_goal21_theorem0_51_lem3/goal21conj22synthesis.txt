let synth (lf1:lst) (y:lst)  =
  y
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 y
;;
let synth (lf1:lst) (y:lst)  =
  append Nil y
;;
let synth (lf1:lst) (y:lst)  =
  append y lf1
;;
let synth (lf1:lst) (y:lst)  =
  append y Nil
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append lf1 y)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append Nil y)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append y lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append y Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append lf1 y)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append Nil y)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append y lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append y Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil lf1) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 lf1) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 Nil) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil Nil) y
;;
let synth (lf1:lst) (y:lst)  =
  append y (append Nil lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append lf1 lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append lf1 Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append Nil Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 y) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 y) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil y) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil y) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append y lf1) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append y lf1) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append y Nil) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append y Nil) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append lf1 (append lf1 y))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append lf1 (append Nil y))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append lf1 (append y lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append lf1 (append y Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append Nil (append lf1 y))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append Nil (append Nil y))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append Nil (append y lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append Nil (append y Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append Nil lf1) y)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append lf1 lf1) y)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append lf1 Nil) y)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append Nil Nil) y)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append y (append Nil lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append y (append lf1 lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append y (append lf1 Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append y (append Nil Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append lf1 y) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append lf1 y) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append Nil y) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append Nil y) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append y lf1) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append y lf1) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append y Nil) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append lf1 (append (append y Nil) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append lf1 (append lf1 y))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append lf1 (append Nil y))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append lf1 (append y lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append lf1 (append y Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append Nil (append lf1 y))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append Nil (append Nil y))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append Nil (append y lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append Nil (append y Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append Nil lf1) y)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append lf1 lf1) y)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append lf1 Nil) y)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append Nil Nil) y)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append y (append Nil lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append y (append lf1 lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append y (append lf1 Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append y (append Nil Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append lf1 y) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append lf1 y) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append Nil y) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append Nil y) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append y lf1) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append y lf1) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append y Nil) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append Nil (append (append y Nil) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil lf1) (append lf1 y)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil lf1) (append Nil y)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil lf1) (append y lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil lf1) (append y Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 lf1) (append lf1 y)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 lf1) (append Nil y)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 lf1) (append y lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 lf1) (append y Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 Nil) (append lf1 y)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 Nil) (append Nil y)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 Nil) (append y lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 Nil) (append y Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil Nil) (append lf1 y)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil Nil) (append Nil y)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil Nil) (append y lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil Nil) (append y Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append Nil lf1)) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append lf1 lf1)) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append lf1 Nil)) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil Nil) lf1) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append Nil lf1)) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append lf1 lf1)) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append lf1 Nil)) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append Nil Nil)) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil lf1) lf1) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil lf1) Nil) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 lf1) lf1) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 lf1) Nil) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 Nil) lf1) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 Nil) Nil) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append Nil Nil)) y
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil Nil) Nil) y
;;
let synth (lf1:lst) (y:lst)  =
  append y (append Nil (append Nil lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append y (append Nil (append lf1 lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append y (append Nil (append lf1 Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append y (append (append Nil Nil) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append lf1 (append Nil lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append y (append lf1 (append lf1 lf1))
;;
let synth (lf1:lst) (y:lst)  =
  append y (append lf1 (append lf1 Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append y (append lf1 (append Nil Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append y (append (append Nil lf1) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append (append Nil lf1) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append (append lf1 lf1) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append (append lf1 lf1) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append (append lf1 Nil) lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append (append lf1 Nil) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append y (append Nil (append Nil Nil))
;;
let synth (lf1:lst) (y:lst)  =
  append y (append (append Nil Nil) Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 y) (append Nil lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 y) (append lf1 lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 y) (append lf1 Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 y) (append Nil Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil y) (append Nil lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil y) (append lf1 lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil y) (append lf1 Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil y) (append Nil Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append y lf1) (append Nil lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append y lf1) (append lf1 lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append y lf1) (append lf1 Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append y lf1) (append Nil Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append y Nil) (append Nil lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append y Nil) (append lf1 lf1)
;;
let synth (lf1:lst) (y:lst)  =
  append (append y Nil) (append lf1 Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append y Nil) (append Nil Nil)
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append lf1 y)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append lf1 y)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append Nil y)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append Nil y)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append y lf1)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append y lf1)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append y Nil)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append lf1 (append y Nil)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append lf1 y)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append lf1 y)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append Nil y)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append Nil y)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append y lf1)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append y lf1)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append y Nil)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append Nil (append y Nil)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil lf1) y) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil lf1) y) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 lf1) y) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 lf1) y) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 Nil) y) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 Nil) y) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil Nil) y) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil Nil) y) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append y (append Nil lf1)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append y (append Nil lf1)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append y (append lf1 lf1)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append y (append lf1 lf1)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append y (append lf1 Nil)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append y (append lf1 Nil)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append y (append Nil Nil)) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append y (append Nil Nil)) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 y) lf1) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 y) lf1) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 y) Nil) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append lf1 y) Nil) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil y) lf1) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil y) lf1) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil y) Nil) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append Nil y) Nil) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append y lf1) lf1) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append y lf1) lf1) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append y lf1) Nil) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append y lf1) Nil) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append y Nil) lf1) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append y Nil) lf1) Nil
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append y Nil) Nil) lf1
;;
let synth (lf1:lst) (y:lst)  =
  append (append (append y Nil) Nil) Nil
;;
