Provable and Useful in Completing Stuck Goal

Useful in Completing Stuck Goal
Lemma conj31eqsynthconj4 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (append (revflat lv3) (Cons lv0 (revflat lv1))) lv2) ((qrevaflat lv3 (Cons lv0 (qrevaflat lv1 lv2)))))

Lemma conj31eqsynthconj3 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (append (revflat lv3) (Cons lv0 (revflat lv1))) lv2) ((qrevaflat Leaf (qrevaflat (Node lv0 lv3 lv1) lv2))))

Lemma conj31eqsynthconj1 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (append (revflat lv3) (Cons lv0 (revflat lv1))) lv2) ((qrevaflat lv3 (qrevaflat (Node lv0 Leaf lv1) lv2))))
Valid Lemmas
Lemma conj29synthconj3 : forall  (lv0 : lst), (@eq lst (append lv0 Nil) lv0)

Lemma conj29eqsynthconj3 : forall  (lv0 : lst), (@eq lst (lv0) ((append lv0 Nil)))

Lemma conj1synthconj2 : forall  (lv0 : lst) (lv1 : lst), (@eq lst lv0 (append lv0 Nil))

Lemma conj31eqsynthconj5 : forall  (lv0 : tree), (@eq lst (revflat lv0) ((qrevaflat lv0 Nil)))

Lemma conj29synthconj1 : forall  (lv0 : lst), (@eq lst (append lv0 (revflat Leaf)) lv0)

Lemma conj29eqsynthconj1 : forall  (lv0 : lst), (@eq lst (lv0) ((append lv0 (revflat Leaf))))

Lemma conj31eqsynthconj2 : forall  (lv0 : tree), (@eq lst (revflat lv0) ((qrevaflat lv0 (revflat Leaf))))

Lemma conj31eqsynthconj1 : forall  (lv0 : tree), (@eq lst (revflat lv0) ((append (revflat lv0) Nil)))

Lemma conj31eqsynthconj3 : forall  (lv0 : natural) (lv1 : lst), (@eq lst (Cons lv0 lv1) ((append (Cons lv0 lv1) Nil)))

Lemma conj15eqsynthconj3 : forall  (lv0 : lst) (lv1 : natural), (@eq lst (Cons lv1 lv0) ((append (Cons lv1 lv0) Nil)))

Lemma conj12eqsynthconj1 : forall  (lv0 : lst) (lv1 : lst), (@eq lst (append lv1 lv0) ((append lv1 (append lv0 Nil))))

Lemma conj11eqsynthconj1 : forall  (lv0 : lst) (lv1 : lst), (@eq lst (append lv0 lv1) ((append lv0 (append lv1 Nil))))

Lemma conj31eqsynthconj4 : forall  (lv0 : natural) (lv1 : tree), (@eq lst (Cons lv0 (revflat lv1)) ((Cons lv0 (qrevaflat lv1 Nil))))

Lemma conj31eqsynthconj3 : forall  (lv0 : natural) (lv1 : tree), (@eq lst (Cons lv0 (revflat lv1)) ((qrevaflat (Node lv0 Leaf lv1) Nil)))

Lemma conj12synthconj6 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv2 lv1) lv0) (append lv2 (append lv1 lv0)))

Lemma conj11synthconj6 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv0 lv2) lv1) (append lv0 (append lv2 lv1)))

Lemma conj24synthconj6 : forall  (lv0 : lst) (lv1 : tree) (lv2 : lst), (@eq lst (append (append (revflat lv1) lv2) lv0) (qrevaflat lv1 (append lv2 lv0)))

Lemma conj24synthconj4 : forall  (lv0 : lst) (lv1 : tree) (lv2 : lst), (@eq lst (append (append (revflat lv1) lv2) lv0) (append (revflat lv1) (append lv2 lv0)))

Lemma conj16eqsynthconj1 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst), (@eq lst (append lv1 (Cons lv0 lv2)) ((append lv1 (Cons lv0 (append lv2 Nil)))))

Lemma conj15eqsynthconj1 : forall  (lv0 : lst) (lv1 : natural) (lv2 : lst), (@eq lst (append lv2 (Cons lv1 lv0)) ((append lv2 (Cons lv1 (append lv0 Nil)))))

Lemma conj12synthconj4 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv2 lv1) lv0) (qrevaflat Leaf (append lv2 (append lv1 lv0))))

Lemma conj12synthconj2 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv2 lv1) lv0) (append Nil (append lv2 (append lv1 lv0))))

Lemma conj11synthconj4 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv0 lv2) lv1) (qrevaflat Leaf (append lv0 (append lv2 lv1))))

Lemma conj11synthconj2 : forall  (lv0 : lst) (lv1 : lst) (lv2 : lst), (@eq lst (append (append lv0 lv2) lv1) (append Nil (append lv0 (append lv2 lv1))))

Lemma conj31eqsynthconj5 : forall  (lv0 : natural) (lv1 : tree) (lv2 : tree), (@eq lst (append (revflat lv2) (Cons lv0 (revflat lv1))) ((qrevaflat (Node lv0 lv2 lv1) Nil)))

Lemma conj28eqsynthconj3 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst), (@eq lst (append (revflat lv1) (Cons lv0 lv2)) ((append (revflat (Node lv0 lv1 Leaf)) lv2)))

Lemma conj24synthconj2 : forall  (lv0 : lst) (lv1 : tree) (lv2 : lst), (@eq lst (append (append (revflat lv1) lv2) lv0) (qrevaflat Leaf (qrevaflat lv1 (append lv2 lv0))))

Lemma conj24synthconj1 : forall  (lv0 : lst) (lv1 : tree) (lv2 : lst), (@eq lst (append (append (revflat lv1) lv2) lv0) (qrevaflat lv1 (append lv2 (append lv0 Nil))))

Lemma conj20eqsynthconj4 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst), (@eq lst (append lv2 (Cons lv0 (revflat lv1))) ((append lv2 (Cons lv0 (qrevaflat lv1 Nil)))))

Lemma conj20eqsynthconj3 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst), (@eq lst (append lv2 (Cons lv0 (revflat lv1))) ((append lv2 (qrevaflat (Node lv0 Leaf lv1) Nil))))

Lemma conj16synthconj3 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv2 (Cons lv0 lv3)) lv1) (append lv2 (Cons lv0 (append lv3 lv1))))

Lemma conj16synthconj2 : forall  (lv0 : natural) (lv1 : lst) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv2 (Cons lv0 lv3)) lv1) (append lv2 (append (Cons lv0 lv3) lv1)))

Lemma conj15eqsynthconj3 : forall  (lv0 : lst) (lv1 : natural) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv3 (Cons lv1 lv0)) lv2) ((append lv3 (Cons lv1 (append lv0 lv2)))))

Lemma conj15eqsynthconj2 : forall  (lv0 : lst) (lv1 : natural) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv3 (Cons lv1 lv0)) lv2) ((append lv3 (append (Cons lv1 lv0) lv2))))

Lemma conj28eqsynthconj6 : forall  (lv0 : natural) (lv1 : lst) (lv2 : tree) (lv3 : lst), (@eq lst (append (append (revflat lv2) (Cons lv0 lv3)) lv1) ((qrevaflat lv2 (Cons lv0 (append lv3 lv1)))))

Lemma conj28eqsynthconj5 : forall  (lv0 : natural) (lv1 : lst) (lv2 : tree) (lv3 : lst), (@eq lst (append (append (revflat lv2) (Cons lv0 lv3)) lv1) ((qrevaflat lv2 (append (Cons lv0 lv3) lv1))))

Lemma conj28synthconj5 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (qrevaflat (Node lv0 lv3 lv1) Nil) lv2) (qrevaflat lv3 (Cons lv0 (qrevaflat lv1 lv2))))

Lemma conj28synthconj4 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (qrevaflat lv3 (Cons lv0 (revflat lv1))) lv2) (qrevaflat lv3 (Cons lv0 (qrevaflat lv1 lv2))))

Lemma conj20eqsynthconj5 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv3 (Cons lv0 (revflat lv1))) lv2) ((append lv3 (Cons lv0 (qrevaflat lv1 lv2)))))

Lemma conj28eqsynthconj3 : forall  (lv0 : natural) (lv1 : lst) (lv2 : tree) (lv3 : lst), (@eq lst (append (append (revflat lv2) (Cons lv0 lv3)) lv1) ((qrevaflat (Node lv0 lv2 Leaf) (append lv3 lv1))))

Lemma conj28eqsynthconj1 : forall  (lv0 : natural) (lv1 : lst) (lv2 : tree) (lv3 : lst), (@eq lst (append (append (revflat lv2) (Cons lv0 lv3)) lv1) ((append (revflat lv2) (Cons lv0 (append lv3 lv1)))))

Lemma conj28synthconj1 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (qrevaflat lv3 (revflat (Node lv0 Leaf lv1))) lv2) (qrevaflat lv3 (Cons lv0 (qrevaflat lv1 lv2))))

Lemma conj20eqsynthconj4 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv3 (Cons lv0 (revflat lv1))) lv2) ((append lv3 (qrevaflat (Node lv0 Leaf lv1) lv2))))

Lemma conj20eqsynthconj3 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv3 (Cons lv0 (revflat lv1))) lv2) ((append lv3 (Cons lv0 (append (revflat lv1) lv2)))))

Lemma conj20eqsynthconj2 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : lst), (@eq lst (append (append lv3 (Cons lv0 (revflat lv1))) lv2) ((append lv3 (append (Cons lv0 (revflat lv1)) lv2))))

Lemma conj31synthconj4 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (append (revflat lv3) (Cons lv0 (revflat lv1))) lv2) (qrevaflat lv3 (append (Cons lv0 (revflat lv1)) lv2)))

Lemma conj31synthconj3 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (append (revflat lv3) (Cons lv0 (revflat lv1))) lv2) (qrevaflat lv3 (Cons lv0 (append (revflat lv1) lv2))))

Lemma conj28synthconj1 : forall  (lv0 : natural) (lv1 : lst) (lv2 : tree) (lv3 : lst), (@eq lst (append (append (revflat lv2) (Cons lv0 lv3)) lv1) (qrevaflat lv2 (Cons lv0 (append lv3 (append lv1 Nil)))))

Lemma conj28synthconj4 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (append (revflat lv3) (Cons lv0 (qrevaflat lv1 Nil))) lv2) (qrevaflat lv3 (Cons lv0 (qrevaflat lv1 lv2))))

Lemma conj31synthconj2 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (append (revflat lv3) (Cons lv0 (revflat lv1))) lv2) (qrevaflat lv3 (append (revflat (Node lv0 Leaf lv1)) lv2)))

Lemma conj28synthconj3 : forall  (lv0 : natural) (lv1 : tree) (lv2 : lst) (lv3 : tree), (@eq lst (append (append (revflat lv3) (qrevaflat (Node lv0 Leaf lv1) Nil)) lv2) (qrevaflat lv3 (Cons lv0 (qrevaflat lv1 lv2))))
