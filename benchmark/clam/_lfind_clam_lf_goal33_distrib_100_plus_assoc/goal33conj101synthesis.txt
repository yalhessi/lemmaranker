let synth (lf1:natural) (lf2:natural)  =
  plus lf1 lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus Zero lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus lf2 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus lf1 lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus lf2 lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero lf1) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 Zero) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus Zero lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus lf1 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 lf2) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero lf2) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 lf1) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 Zero) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (mult (Succ (Zero)) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (mult lf2 (Succ (Zero)))
;;
let synth (lf1:natural) (lf2:natural)  =
  mult (Succ (Zero)) (plus lf1 lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  mult (Succ (Zero)) (plus lf2 lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult (Succ (Zero)) lf1) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult lf1 (Succ (Zero))) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (mult (Succ (Zero)) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (mult lf1 (Succ (Zero)))
;;
let synth (lf1:natural) (lf2:natural)  =
  mult (plus lf1 lf2) (Succ (Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  mult (plus lf2 lf1) (Succ (Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult (Succ (Zero)) lf2) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult lf2 (Succ (Zero))) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus Zero (plus Zero lf2))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus Zero (plus lf2 Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus (mult Zero lf1) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus (mult lf1 Zero) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus (mult Zero Zero) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus (plus Zero Zero) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus lf2 (mult Zero lf2))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus lf2 (mult lf2 Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus lf2 (mult Zero lf1))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus lf2 (mult lf1 Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus lf2 (mult Zero Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus lf2 (plus Zero Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus (mult Zero lf2) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus (plus Zero lf2) Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus (mult lf2 Zero) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf1 (plus (plus lf2 Zero) Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus lf1 (plus Zero lf2))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus lf1 (plus lf2 Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus Zero (plus lf1 lf2))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus Zero (plus lf2 lf1))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus (plus Zero lf1) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus (plus lf1 Zero) lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus lf2 (plus Zero lf1))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus lf2 (plus lf1 Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus (plus lf1 lf2) Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus (plus Zero lf2) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus (plus lf2 lf1) Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus Zero (plus (plus lf2 Zero) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult Zero lf1) (plus lf1 lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult Zero lf1) (plus lf2 lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero lf1) (plus Zero lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero lf1) (plus lf2 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult lf1 Zero) (plus lf1 lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult lf1 Zero) (plus lf2 lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 Zero) (plus Zero lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 Zero) (plus lf2 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult Zero Zero) (plus lf1 lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult Zero Zero) (plus lf2 lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero Zero) (plus lf1 lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero Zero) (plus lf2 lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero (plus Zero lf1)) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero (plus lf1 Zero)) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult Zero Zero) lf1) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus Zero Zero) lf1) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 (mult Zero lf1)) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 (mult lf1 Zero)) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 (mult Zero Zero)) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 (plus Zero Zero)) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult Zero lf1) lf1) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus Zero lf1) Zero) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult lf1 Zero) lf1) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus lf1 Zero) Zero) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus lf1 (mult Zero lf2))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus lf1 (mult lf2 Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus (mult Zero lf2) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus (mult lf2 Zero) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus Zero (plus Zero lf1))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus Zero (plus lf1 Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus (mult Zero Zero) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus (plus Zero Zero) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus lf1 (mult Zero lf1))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus lf1 (mult lf1 Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus lf1 (mult Zero Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus lf1 (plus Zero Zero))
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus (mult Zero lf1) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus (plus Zero lf1) Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus (mult lf1 Zero) lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus lf2 (plus (plus lf1 Zero) Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 lf2) (mult Zero lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 lf2) (mult lf2 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 lf2) (mult Zero lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 lf2) (mult lf1 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 lf2) (mult Zero Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 lf2) (plus Zero Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult Zero lf2) (plus lf1 lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult Zero lf2) (plus lf2 lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero lf2) (plus Zero lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero lf2) (plus lf1 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult lf2 Zero) (plus lf1 lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (mult lf2 Zero) (plus lf2 lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 lf1) (mult Zero lf2)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 lf1) (mult lf2 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 lf1) (mult Zero lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 lf1) (mult lf1 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 lf1) (mult Zero Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 lf1) (plus Zero Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 Zero) (plus Zero lf1)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 Zero) (plus lf1 Zero)
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 (mult Zero lf2)) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 (plus Zero lf2)) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 (mult lf2 Zero)) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf1 (plus lf2 Zero)) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero (plus lf1 lf2)) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero (plus Zero lf2)) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero (plus lf2 lf1)) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus Zero (plus lf2 Zero)) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult Zero lf1) lf2) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus Zero lf1) lf2) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult lf1 Zero) lf2) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus lf1 Zero) lf2) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult Zero Zero) lf2) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus Zero Zero) lf2) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 (mult Zero lf2)) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 (mult lf2 Zero)) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 (mult Zero lf1)) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 (plus Zero lf1)) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 (mult lf1 Zero)) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 (plus lf1 Zero)) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 (mult Zero Zero)) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus lf2 (plus Zero Zero)) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus lf1 lf2) Zero) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult Zero lf2) lf2) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult Zero lf2) lf1) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus Zero lf2) lf1) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus Zero lf2) Zero) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult lf2 Zero) lf2) lf1
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (mult lf2 Zero) lf1) lf2
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus lf2 lf1) Zero) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus lf2 Zero) lf1) Zero
;;
let synth (lf1:natural) (lf2:natural)  =
  plus (plus (plus lf2 Zero) Zero) lf1
;;
