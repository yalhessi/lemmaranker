
### SUMMARY ###
Time to first category 1 (s): 43 
Total Time: 1099 
Total Lemmas: 102 
Filter Quickchick: 11 
Filter duplicate: 37 
Filter trivial: 22 
Filter is_version: 1 
Stuck Proof State: Lemma lfind_state  (x:natural) (y:natural) (IHx:@eq natural (plus (mult x y) x) (mult x (Succ y))):@eq natural (Succ (plus (mult x (Succ y)) y))
  (plus (mult x (Succ y)) (Succ y)).
Admitted.
Yes Cat 1: true
# Generalizations : 16
#Synthesized Lemmas not disprovable : 35
Provable and Useful in Completing Stuck Goal (Category 1)

conj13: forall (lf1:natural) (y:natural) , (@eq natural (Succ (plus lf1 y)) (plus lf1 (Succ y)))
Useful in Completing Stuck Goal (Category 2)

conj15eqsynthconj6 : forall  (lv0 : natural) (lv1 : natural) (lv2 : natural), (@eq natural (plus (mult lv0 lv1) lv2) (plus lv2 (mult lv1 lv0)))
conj15eqsynthconj5 : forall  (lv0 : natural) (lv1 : natural) (lv2 : natural), (@eq natural (plus (mult lv0 lv1) lv2) (plus lv2 (mult lv0 lv1)))
conj16eqsynthconj1 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (Succ (plus (mult lv0 (Succ lv1)) lv1)) (plus Zero (mult (Succ lv0) (Succ lv1))))
conj17: forall  (x:natural) (y:natural) , (@eq natural (Succ (plus (mult x (Succ y)) y)) (plus (mult x (Succ y)) (Succ y)))
conj15eqsynthconj3_hyp: forall  (lv0 : natural) (lv1 : natural) (lv2 : natural), (@eq natural (plus (mult lv0 lv2) lv0) (mult lv0 lv1)) ->  (@eq natural (Succ (plus (mult lv0 lv1) lv2)) (mult (Succ lv0) (Succ lv2)))
Valid Lemmas (Category 3)

conj16eqsynthconj3 : forall  (lv0 : natural), (@eq natural (Succ lv0) (plus lv0 (Succ Zero)))
conj16eqsynthconj2 : forall  (lv0 : natural), (@eq natural (Succ lv0) (plus (Succ lv0) Zero))
conj15eqsynthconj3 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (mult lv0 lv1) (mult lv1 (plus lv0 Zero)))
conj15eqsynthconj2 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (mult lv0 lv1) (plus Zero (mult lv1 lv0)))
conj16eqsynthconj4 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (mult lv0 (Succ lv1)) (plus lv0 (mult lv1 lv0)))
conj16eqsynthconj3 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (mult lv0 (Succ lv1)) (plus lv0 (mult lv0 lv1)))
conj16eqsynthconj2 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (mult lv0 (Succ lv1)) (plus (mult lv1 lv0) lv0))
conj15eqsynthconj6 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 lv1) lv1) (mult lv1 (Succ lv0)))
conj15synthconj4 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus lv0 (mult lv0 lv1)) (plus (mult lv1 lv0) lv0))
conj15synthconj3 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus lv0 (mult lv1 lv0)) (plus (mult lv1 lv0) lv0))
conj15synthconj2 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 lv1) lv0) (plus (mult lv1 lv0) lv0))
conj15eqsynthconj4 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 lv1) lv1) (plus lv1 (mult lv1 lv0)))
conj15eqsynthconj3 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 lv1) lv1) (plus lv1 (mult lv0 lv1)))
conj15eqsynthconj2 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 lv1) lv1) (plus (mult lv1 lv0) lv1))
conj15eqsynthconj4 : forall  (lv0 : natural) (lv1 : natural) (lv2 : natural), (@eq natural (plus (mult lv0 lv1) lv2) (plus (mult lv1 lv0) lv2))
conj16eqsynthconj6 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 (Succ lv1)) lv1) (plus lv1 (mult (Succ lv1) lv0)))
conj16eqsynthconj5 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 (Succ lv1)) lv1) (plus lv1 (mult lv0 (Succ lv1))))
conj16eqsynthconj4 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 (Succ lv1)) lv1) (plus lv0 (mult lv1 (Succ lv0))))
conj16eqsynthconj3 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 (Succ lv1)) lv1) (plus lv0 (mult (Succ lv0) lv1)))
conj16eqsynthconj1 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 (Succ lv1)) lv1) (plus (mult (Succ lv1) lv0) lv1))
conj16eqsynthconj4 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (Succ (plus (mult lv0 (Succ lv1)) lv1)) (plus lv1 (Succ (mult (Succ lv1) lv0))))
conj16eqsynthconj3 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (Succ (plus (mult lv0 (Succ lv1)) lv1)) (plus lv1 (Succ (mult lv0 (Succ lv1)))))
conj16eqsynthconj2 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (Succ (plus (mult lv0 (Succ lv1)) lv1)) (plus Zero (mult (Succ lv1) (Succ lv0))))
conj10eqsynthconj4 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 (Succ lv1)) (Succ lv1)) (plus lv1 (Succ (mult (Succ lv1) lv0))))
conj10eqsynthconj3 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 (Succ lv1)) (Succ lv1)) (plus lv1 (Succ (mult lv0 (Succ lv1)))))
conj10eqsynthconj2 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus (mult lv0 (Succ lv1)) (Succ lv1)) (plus Zero (mult (Succ lv1) (Succ lv0))))
conj10synthconj4 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus lv0 (Succ (mult (Succ lv0) lv1))) (plus (mult lv1 (Succ lv0)) (Succ lv0)))
conj10synthconj3 : forall  (lv0 : natural) (lv1 : natural), (@eq natural (plus lv0 (Succ (mult lv1 (Succ lv0)))) (plus (mult lv1 (Succ lv0)) (Succ lv0)))
conj15eqsynthconj4_hyp: forall  (lv0 : natural) (lv1 : natural) (lv2 : natural), (@eq natural (plus (mult lv0 lv2) lv0) (mult lv0 lv1)) ->  (@eq natural (Succ (plus (mult lv0 lv1) lv2)) (mult (Succ lv2) (Succ lv0)))
conj15eqsynthconj1_hyp: forall  (lv0 : natural) (lv1 : natural) (lv2 : natural), (@eq natural (plus (mult lv0 lv2) lv0) (mult lv0 lv1)) ->  (@eq natural (plus (mult lv0 lv1) lv2) (plus lv2 (mult lv0 (Succ lv2))))
conj15eqsynthconj2_hyp: forall  (lv0 : natural) (lv1 : natural) (lv2 : natural), (@eq natural (plus (mult lv0 lv2) lv0) (mult lv0 lv1)) ->  (@eq natural (plus (mult lv0 lv1) lv2) (plus lv2 (mult (Succ lv2) lv0)))

