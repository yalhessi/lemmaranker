
### SUMMARY ###
Time to first category 1 (s): 967 
Total Time: 1058 
Total Lemmas: 0 
Filter Quickchick: 0 
Filter duplicate: 0 
Filter trivial: 0 
Filter is_version: 0 
Stuck Proof State: Lemma lfind_state  (n:natural) (l1:lst) (n0:natural) (l2:lst) (x:natural):@eq lst
  (append (append (append (rev l2) (Cons n0 Nil)) (Cons x (rev l1)))
     (Cons n Nil))
  (append (append (rev l2) (Cons n0 Nil))
     (Cons x (append (rev l1) (Cons n Nil)))).
Admitted.
Yes Cat 1: true
# Generalizations : 33
#Synthesized Lemmas not disprovable : 0
Provable and Useful in Completing Stuck Goal (Category 1)

conj87: forall (lf1:lst) (x:natural)(lf3:lst)(lf2:lst) , (@eq lst (append (append lf1 (Cons x lf3)) lf2) (append lf1 (Cons x (append lf3 lf2))))
conj95: forall (lf1:lst) (x:natural) (l1:lst)(lf2:lst) , (@eq lst (append (append lf1 (Cons x (rev l1))) lf2) (append lf1 (Cons x (append (rev l1) lf2))))
conj290: forall (lf2:lst) (n0:natural) (x:natural)(lf3:lst)(lf1:lst) , (@eq lst (append (append (append lf2 (Cons n0 Nil)) (Cons x lf3)) lf1) (append (append lf2 (Cons n0 Nil)) (Cons x (append lf3 lf1))))
conj298: forall (lf2:lst) (n0:natural) (x:natural) (l1:lst)(lf1:lst) , (@eq lst (append (append (append lf2 (Cons n0 Nil)) (Cons x (rev l1))) lf1) (append (append lf2 (Cons n0 Nil)) (Cons x (append (rev l1) lf1))))
conj294: forall (lf1:lst) (n0:natural) (x:natural)(lf2:lst) (n:natural) , (@eq lst (append (append (append lf1 (Cons n0 Nil)) (Cons x lf2)) (Cons n Nil)) (append (append lf1 (Cons n0 Nil)) (Cons x (append lf2 (Cons n Nil)))))
conj302: forall (lf1:lst) (n0:natural) (x:natural) (l1:lst) (n:natural) , (@eq lst (append (append (append lf1 (Cons n0 Nil)) (Cons x (rev l1))) (Cons n Nil)) (append (append lf1 (Cons n0 Nil)) (Cons x (append (rev l1) (Cons n Nil)))))
Useful in Completing Stuck Goal (Category 2)

conj259: forall (lf1:lst) (x:natural)(lf2:lst) (n:natural) , (@eq lst (append (append lf1 (Cons x lf2)) (Cons n Nil)) (append lf1 (Cons x (append lf2 (Cons n Nil)))))
conj113: forall (lf3:lst)(lf1:lst) (x:natural)(lf4:lst)(lf2:lst) , (@eq lst (append (append (append lf3 lf1) (Cons x lf4)) lf2) (append (append lf3 lf1) (Cons x (append lf4 lf2))))
conj91: forall (lf1:lst) (x:natural)(lf2:lst) (n:natural)(lf3:lst) , (@eq lst (append (append lf1 (Cons x lf2)) (Cons n lf3)) (append lf1 (Cons x (append lf2 (Cons n lf3)))))
conj263: forall (lf1:lst) (x:natural) (l1:lst) (n:natural) , (@eq lst (append (append lf1 (Cons x (rev l1))) (Cons n Nil)) (append lf1 (Cons x (append (rev l1) (Cons n Nil)))))
conj165: forall  (l2:lst)(lf1:lst) (x:natural)(lf3:lst)(lf2:lst) , (@eq lst (append (append (append (rev l2) lf1) (Cons x lf3)) lf2) (append (append (rev l2) lf1) (Cons x (append lf3 lf2))))
conj121: forall (lf3:lst)(lf1:lst) (x:natural) (l1:lst)(lf2:lst) , (@eq lst (append (append (append lf3 lf1) (Cons x (rev l1))) lf2) (append (append lf3 lf1) (Cons x (append (rev l1) lf2))))
conj99: forall (lf1:lst) (x:natural) (l1:lst) (n:natural)(lf2:lst) , (@eq lst (append (append lf1 (Cons x (rev l1))) (Cons n lf2)) (append lf1 (Cons x (append (rev l1) (Cons n lf2)))))
conj272: forall (lf2:lst)(lf1:lst) (x:natural)(lf3:lst) (n:natural) , (@eq lst (append (append (append lf2 lf1) (Cons x lf3)) (Cons n Nil)) (append (append lf2 lf1) (Cons x (append lf3 (Cons n Nil)))))
conj173: forall  (l2:lst)(lf1:lst) (x:natural) (l1:lst)(lf2:lst) , (@eq lst (append (append (append (rev l2) lf1) (Cons x (rev l1))) lf2) (append (append (rev l2) lf1) (Cons x (append (rev l1) lf2))))
conj139: forall (lf2:lst) (n0:natural)(lf4:lst) (x:natural)(lf3:lst)(lf1:lst) , (@eq lst (append (append (append lf2 (Cons n0 lf4)) (Cons x lf3)) lf1) (append (append lf2 (Cons n0 lf4)) (Cons x (append lf3 lf1))))
conj117: forall (lf2:lst)(lf1:lst) (x:natural)(lf3:lst) (n:natural)(lf4:lst) , (@eq lst (append (append (append lf2 lf1) (Cons x lf3)) (Cons n lf4)) (append (append lf2 lf1) (Cons x (append lf3 (Cons n lf4)))))
conj329: forall  (l2:lst) (n0:natural) (x:natural)(lf2:lst)(lf1:lst) , (@eq lst (append (append (append (rev l2) (Cons n0 Nil)) (Cons x lf2)) lf1) (append (append (rev l2) (Cons n0 Nil)) (Cons x (append lf2 lf1))))
conj311: forall  (l2:lst)(lf1:lst) (x:natural)(lf2:lst) (n:natural) , (@eq lst (append (append (append (rev l2) lf1) (Cons x lf2)) (Cons n Nil)) (append (append (rev l2) lf1) (Cons x (append lf2 (Cons n Nil)))))
conj276: forall (lf2:lst)(lf1:lst) (x:natural) (l1:lst) (n:natural) , (@eq lst (append (append (append lf2 lf1) (Cons x (rev l1))) (Cons n Nil)) (append (append lf2 lf1) (Cons x (append (rev l1) (Cons n Nil)))))
conj191: forall  (l2:lst) (n0:natural)(lf3:lst) (x:natural)(lf2:lst)(lf1:lst) , (@eq lst (append (append (append (rev l2) (Cons n0 lf3)) (Cons x lf2)) lf1) (append (append (rev l2) (Cons n0 lf3)) (Cons x (append lf2 lf1))))
conj169: forall  (l2:lst)(lf1:lst) (x:natural)(lf2:lst) (n:natural)(lf3:lst) , (@eq lst (append (append (append (rev l2) lf1) (Cons x lf2)) (Cons n lf3)) (append (append (rev l2) lf1) (Cons x (append lf2 (Cons n lf3)))))
conj147: forall (lf2:lst) (n0:natural)(lf3:lst) (x:natural) (l1:lst)(lf1:lst) , (@eq lst (append (append (append lf2 (Cons n0 lf3)) (Cons x (rev l1))) lf1) (append (append lf2 (Cons n0 lf3)) (Cons x (append (rev l1) lf1))))
conj125: forall (lf2:lst)(lf1:lst) (x:natural) (l1:lst) (n:natural)(lf3:lst) , (@eq lst (append (append (append lf2 lf1) (Cons x (rev l1))) (Cons n lf3)) (append (append lf2 lf1) (Cons x (append (rev l1) (Cons n lf3)))))
conj337: forall  (l2:lst) (n0:natural) (x:natural) (l1:lst)(lf1:lst) , (@eq lst (append (append (append (rev l2) (Cons n0 Nil)) (Cons x (rev l1))) lf1) (append (append (rev l2) (Cons n0 Nil)) (Cons x (append (rev l1) lf1))))
conj315: forall  (l2:lst)(lf1:lst) (x:natural) (l1:lst) (n:natural) , (@eq lst (append (append (append (rev l2) lf1) (Cons x (rev l1))) (Cons n Nil)) (append (append (rev l2) lf1) (Cons x (append (rev l1) (Cons n Nil)))))
conj199: forall  (l2:lst) (n0:natural)(lf2:lst) (x:natural) (l1:lst)(lf1:lst) , (@eq lst (append (append (append (rev l2) (Cons n0 lf2)) (Cons x (rev l1))) lf1) (append (append (rev l2) (Cons n0 lf2)) (Cons x (append (rev l1) lf1))))
conj177: forall  (l2:lst)(lf1:lst) (x:natural) (l1:lst) (n:natural)(lf2:lst) , (@eq lst (append (append (append (rev l2) lf1) (Cons x (rev l1))) (Cons n lf2)) (append (append (rev l2) lf1) (Cons x (append (rev l1) (Cons n lf2)))))
conj143: forall (lf1:lst) (n0:natural)(lf3:lst) (x:natural)(lf2:lst) (n:natural) , (@eq lst (append (append (append lf1 (Cons n0 lf3)) (Cons x lf2)) (Cons n lf3)) (append (append lf1 (Cons n0 lf3)) (Cons x (append lf2 (Cons n lf3)))))
conj333: forall  (l2:lst) (n0:natural) (x:natural)(lf1:lst) (n:natural) , (@eq lst (append (append (append (rev l2) (Cons n0 Nil)) (Cons x lf1)) (Cons n Nil)) (append (append (rev l2) (Cons n0 Nil)) (Cons x (append lf1 (Cons n Nil)))))
conj195: forall  (l2:lst) (n0:natural)(lf2:lst) (x:natural)(lf1:lst) (n:natural) , (@eq lst (append (append (append (rev l2) (Cons n0 lf2)) (Cons x lf1)) (Cons n lf2)) (append (append (rev l2) (Cons n0 lf2)) (Cons x (append lf1 (Cons n lf2)))))
conj151: forall (lf1:lst) (n0:natural)(lf2:lst) (x:natural) (l1:lst) (n:natural) , (@eq lst (append (append (append lf1 (Cons n0 lf2)) (Cons x (rev l1))) (Cons n lf2)) (append (append lf1 (Cons n0 lf2)) (Cons x (append (rev l1) (Cons n lf2)))))
conj341: forall  (l2:lst) (n0:natural) (x:natural) (l1:lst) (n:natural) , (@eq lst (append (append (append (rev l2) (Cons n0 Nil)) (Cons x (rev l1))) (Cons n Nil)) (append (append (rev l2) (Cons n0 Nil)) (Cons x (append (rev l1) (Cons n Nil)))))
conj203: forall  (l2:lst) (n0:natural)(lf1:lst) (x:natural) (l1:lst) (n:natural) , (@eq lst (append (append (append (rev l2) (Cons n0 lf1)) (Cons x (rev l1))) (Cons n lf1)) (append (append (rev l2) (Cons n0 lf1)) (Cons x (append (rev l1) (Cons n lf1)))))
Valid Lemmas (Category 3)


