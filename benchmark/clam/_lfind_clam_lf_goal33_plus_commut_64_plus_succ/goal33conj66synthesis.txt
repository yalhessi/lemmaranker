let synth (x:natural)  =
  Succ (x)
;;
let synth (x:natural)  =
  plus Zero (Succ (x))
;;
let synth (x:natural)  =
  plus (Succ (Zero)) x
;;
let synth (x:natural)  =
  plus x (Succ (Zero))
;;
let synth (x:natural)  =
  plus (Succ (x)) Zero
;;
let synth (x:natural)  =
  Succ (plus Zero x)
;;
let synth (x:natural)  =
  Succ (plus x Zero)
;;
let synth (x:natural)  =
  plus Zero (Succ (plus Zero x))
;;
let synth (x:natural)  =
  plus Zero (Succ (plus x Zero))
;;
let synth (x:natural)  =
  plus Zero (plus Zero (Succ (x)))
;;
let synth (x:natural)  =
  plus Zero (plus (Succ (Zero)) x)
;;
let synth (x:natural)  =
  plus Zero (plus x (Succ (Zero)))
;;
let synth (x:natural)  =
  plus Zero (plus (Succ (x)) Zero)
;;
let synth (x:natural)  =
  plus (Succ (Zero)) (plus Zero x)
;;
let synth (x:natural)  =
  plus (Succ (Zero)) (plus x Zero)
;;
let synth (x:natural)  =
  plus (plus Zero Zero) (Succ (x))
;;
let synth (x:natural)  =
  plus (Succ (plus Zero Zero)) x
;;
let synth (x:natural)  =
  plus (plus Zero (Succ (Zero))) x
;;
let synth (x:natural)  =
  plus (plus (Succ (Zero)) Zero) x
;;
let synth (x:natural)  =
  plus x (Succ (plus Zero Zero))
;;
let synth (x:natural)  =
  plus x (plus Zero (Succ (Zero)))
;;
let synth (x:natural)  =
  plus x (plus (Succ (Zero)) Zero)
;;
let synth (x:natural)  =
  plus (Succ (x)) (plus Zero Zero)
;;
let synth (x:natural)  =
  plus (plus Zero x) (Succ (Zero))
;;
let synth (x:natural)  =
  plus (plus x Zero) (Succ (Zero))
;;
let synth (x:natural)  =
  plus (Succ (plus Zero x)) Zero
;;
let synth (x:natural)  =
  plus (Succ (plus x Zero)) Zero
;;
let synth (x:natural)  =
  plus (plus Zero (Succ (x))) Zero
;;
let synth (x:natural)  =
  plus (plus (Succ (Zero)) x) Zero
;;
let synth (x:natural)  =
  plus (plus x (Succ (Zero))) Zero
;;
let synth (x:natural)  =
  plus (plus (Succ (x)) Zero) Zero
;;
let synth (x:natural)  =
  Succ (plus Zero (plus Zero x))
;;
let synth (x:natural)  =
  Succ (plus Zero (plus x Zero))
;;
let synth (x:natural)  =
  Succ (plus (plus Zero Zero) x)
;;
let synth (x:natural)  =
  Succ (plus x (plus Zero Zero))
;;
let synth (x:natural)  =
  Succ (plus (plus Zero x) Zero)
;;
let synth (x:natural)  =
  Succ (plus (plus x Zero) Zero)
;;
let synth (x:natural)  =
  Succ (plus Zero (plus Zero (plus Zero x)))
;;
let synth (x:natural)  =
  Succ (plus Zero (plus Zero (plus x Zero)))
;;
let synth (x:natural)  =
  Succ (plus Zero (plus (plus Zero Zero) x))
;;
let synth (x:natural)  =
  Succ (plus Zero (plus x (plus Zero Zero)))
;;
let synth (x:natural)  =
  Succ (plus Zero (plus (plus Zero x) Zero))
;;
let synth (x:natural)  =
  Succ (plus Zero (plus (plus x Zero) Zero))
;;
let synth (x:natural)  =
  Succ (plus (plus Zero Zero) (plus Zero x))
;;
let synth (x:natural)  =
  Succ (plus (plus Zero Zero) (plus x Zero))
;;
let synth (x:natural)  =
  Succ (plus (plus Zero (plus Zero Zero)) x)
;;
let synth (x:natural)  =
  Succ (plus (plus (plus Zero Zero) Zero) x)
;;
let synth (x:natural)  =
  Succ (plus x (plus Zero (plus Zero Zero)))
;;
let synth (x:natural)  =
  Succ (plus x (plus (plus Zero Zero) Zero))
;;
let synth (x:natural)  =
  Succ (plus (plus Zero x) (plus Zero Zero))
;;
let synth (x:natural)  =
  Succ (plus (plus x Zero) (plus Zero Zero))
;;
let synth (x:natural)  =
  Succ (plus (plus Zero (plus Zero x)) Zero)
;;
let synth (x:natural)  =
  Succ (plus (plus Zero (plus x Zero)) Zero)
;;
let synth (x:natural)  =
  Succ (plus (plus (plus Zero Zero) x) Zero)
;;
let synth (x:natural)  =
  Succ (plus (plus x (plus Zero Zero)) Zero)
;;
let synth (x:natural)  =
  Succ (plus (plus (plus Zero x) Zero) Zero)
;;
let synth (x:natural)  =
  Succ (plus (plus (plus x Zero) Zero) Zero)
;;
