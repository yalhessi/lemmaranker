let synth (lf2:natural)  =
  lf2
;;
let synth (lf2:natural)  =
  Zero
;;
let synth (lf2:natural)  =
  mult Zero lf2
;;
let synth (lf2:natural)  =
  plus Zero lf2
;;
let synth (lf2:natural)  =
  mult lf2 lf2
;;
let synth (lf2:natural)  =
  mult lf2 Zero
;;
let synth (lf2:natural)  =
  plus lf2 lf2
;;
let synth (lf2:natural)  =
  plus lf2 Zero
;;
let synth (lf2:natural)  =
  mult Zero Zero
;;
let synth (lf2:natural)  =
  plus Zero Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) lf2
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) lf2
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) Zero
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Zero)) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Zero)) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Zero)) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (lf2)) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (lf2)) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (lf2)) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (lf2)) Zero) Zero
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Zero)) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Succ (Succ (lf2)))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult Zero lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus Zero lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult lf2 lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult lf2 Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus lf2 lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus lf2 Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult Zero (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus Zero (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Zero)) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Zero)) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult lf2 (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult lf2 (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus lf2 (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus lf2 (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (lf2)) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (lf2)) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (lf2)) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (lf2)) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Zero)) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Zero)) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (lf2)) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (lf2)) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (lf2)) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (lf2)) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Zero))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Zero))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Zero))))))) lf2
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Succ (Succ (lf2)))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult Zero lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus Zero lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult lf2 lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult lf2 Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus lf2 lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus lf2 Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult Zero (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus Zero (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Zero)) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Zero)) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult lf2 (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult lf2 (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus lf2 (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus lf2 (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (lf2)) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (lf2)) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (lf2)) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (lf2)) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Zero)) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Zero)) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (lf2)) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (lf2)) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (lf2)) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (lf2)) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult Zero Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult Zero (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Zero)) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Zero)) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus Zero Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus Zero (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Zero)) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Zero)) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Succ (Succ (Zero)))))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (lf2))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (lf2))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (lf2))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (lf2))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Zero))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Zero))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (lf2))))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (lf2))))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Zero))) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Zero))) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (lf2))) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (lf2))) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (lf2))) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (lf2))) Zero) Zero
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult Zero Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult Zero (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Zero)) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Zero)) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus Zero Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus Zero (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Zero)) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Zero)) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Succ (Succ (Zero)))))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Zero))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Zero))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Zero))))))) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Succ (Succ (Succ (lf2))))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult Zero lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus Zero lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult lf2 lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult lf2 Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus lf2 lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus lf2 Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult Zero (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus Zero (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (Zero)) lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (Zero)) lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult lf2 (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult lf2 (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus lf2 (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus lf2 (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (lf2)) lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (lf2)) Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (lf2)) lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (lf2)) Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult Zero (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus Zero (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Zero)) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Zero)) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (Zero))) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (Zero))) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult lf2 (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult lf2 (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus lf2 (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus lf2 (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (lf2)) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (lf2)) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (lf2)) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (lf2)) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (lf2))) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (lf2))) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (lf2))) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (lf2))) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Zero)) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Zero)) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Zero))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Zero))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (Zero)))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (Zero)))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (lf2)) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (lf2)) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (lf2)) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (lf2)) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (lf2))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (lf2))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (lf2))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (lf2))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (lf2)))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (lf2)))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (lf2)))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (lf2)))) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Succ (Zero)))) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Succ (lf2)))) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Succ (lf2)))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Zero))) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) Zero) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Zero)))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Zero)))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult Zero Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Zero)) Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Zero))) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus Zero Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Zero)) Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Zero))) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Zero)))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Zero)))))))) lf2
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Succ (Succ (Succ (lf2))))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult Zero lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus Zero lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult lf2 lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult lf2 Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus lf2 lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus lf2 Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult Zero (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus Zero (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (Zero)) lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (Zero)) lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult lf2 (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult lf2 (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus lf2 (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus lf2 (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (lf2)) lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (lf2)) Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (lf2)) lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (lf2)) Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult Zero (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus Zero (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Zero)) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Zero)) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (Zero))) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (Zero))) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult lf2 (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult lf2 (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus lf2 (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus lf2 (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (lf2)) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (lf2)) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (lf2)) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (lf2)) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (lf2))) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (lf2))) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (lf2))) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (lf2))) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Zero)) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Zero)) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Zero))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Zero))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (Zero)))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (Zero)))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (lf2)) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (lf2)) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (lf2)) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (lf2)) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (lf2))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (lf2))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (lf2))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (lf2))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (lf2)))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (lf2)))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (lf2)))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (lf2)))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult Zero Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult Zero (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (Zero)) Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult Zero (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Zero)) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (Zero))) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Zero)) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Zero))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (Zero)))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus Zero Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus Zero (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (Zero)) Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus Zero (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Zero)) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (Zero))) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Zero)) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Zero))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (Zero)))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Zero))))))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Succ (Zero)))) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Succ (lf2)))) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Succ (lf2)))) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Succ (Zero)))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (lf2))) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (lf2))) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) lf2) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) lf2) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (lf2))) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (lf2))) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Zero))) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Zero))) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) lf2) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) lf2) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) Zero) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) Zero) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (lf2)))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (lf2)))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (lf2)))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (lf2)))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Zero)))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Zero)))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Succ (lf2)))))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Succ (lf2)))))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult Zero lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult Zero lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus Zero lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus Zero lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult lf2 lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult lf2 lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult lf2 Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult lf2 Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus lf2 lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus lf2 lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus lf2 Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus lf2 Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Zero)) lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Zero)) lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Zero)) lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Zero)) lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (lf2)) lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (lf2)) lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (lf2)) Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (lf2)) Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (lf2)) lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (lf2)) lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (lf2)) Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (lf2)) Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Zero))) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Zero))) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Zero))) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Zero))) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (lf2))) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (lf2))) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (lf2))) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (lf2))) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (lf2))) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (lf2))) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (lf2))) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (lf2))) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Zero)))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Zero)))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (lf2)))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (lf2)))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (lf2)))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (lf2)))) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Zero)))) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Zero)))) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (lf2)))) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (lf2)))) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (lf2)))) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (lf2)))) Zero) Zero
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Succ (Zero)))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult Zero Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult Zero (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (Zero)) Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult Zero (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Zero)) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (Zero))) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Zero)) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Zero))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (Zero)))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus Zero Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus Zero (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (Zero)) Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus Zero (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Zero)) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (Zero))) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Zero)) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Zero))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (Zero)))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Zero))))))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Zero))) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) Zero) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Zero)))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Zero)))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult Zero Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Zero)) Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Zero))) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus Zero Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Zero)) Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Zero))) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Zero)))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Zero)))))))) Zero
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Succ (lf2)))))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (mult Zero lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (plus Zero lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (mult lf2 lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (mult lf2 Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (plus lf2 lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (plus lf2 Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult Zero (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus Zero (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult (Succ (Zero)) lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus (Succ (Zero)) lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult lf2 (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult lf2 (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus lf2 (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus lf2 (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult (Succ (lf2)) lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult (Succ (lf2)) Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus (Succ (lf2)) lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus (Succ (lf2)) Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult Zero (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus Zero (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (Zero)) (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (Zero)) (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (Succ (Zero))) lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (Succ (Zero))) lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult lf2 (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult lf2 (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus lf2 (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus lf2 (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (lf2)) (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (lf2)) (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (lf2)) (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (lf2)) (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (Succ (lf2))) lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (Succ (lf2))) Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (Succ (lf2))) lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (Succ (lf2))) Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult Zero (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus Zero (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Zero)) (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Zero)) (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (Zero))) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (Zero))) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (Succ (Zero)))) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (Succ (Zero)))) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult lf2 (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult lf2 (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus lf2 (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus lf2 (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (lf2)) (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (lf2)) (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (lf2)) (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (lf2)) (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (lf2))) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (lf2))) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (lf2))) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (lf2))) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (Succ (lf2)))) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (Succ (lf2)))) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (Succ (lf2)))) lf2))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (Succ (lf2)))) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Zero)) (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Zero)) (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Zero))) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Zero))) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (Zero)))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (Zero)))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (mult Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (mult Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (plus Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (Succ (Zero))))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (plus Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (Succ (Zero))))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult lf2 (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus lf2 (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (lf2)) (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (lf2)) (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (lf2)) (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (lf2)) (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (lf2))) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (lf2))) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (lf2))) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (lf2))) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (lf2)))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (lf2)))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (lf2)))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (lf2)))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (Succ (lf2))))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (Succ (lf2))))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (mult Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (mult Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (plus Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (plus Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (mult lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (mult lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (mult lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (mult lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (plus lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (plus lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (plus lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (mult (plus lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (Succ (lf2))))) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (Succ (lf2))))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (mult Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (mult Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (plus Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (plus Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (mult lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (mult lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (mult lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (mult lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (plus lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (plus lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (plus lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  mult Zero (plus (plus lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (mult Zero lf2))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (plus Zero lf2))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero (mult Zero lf2))
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero (plus Zero lf2))
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  plus Zero (plus (mult Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (mult Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (plus Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Succ (Succ (Zero))))) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus (plus Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (mult Zero lf2))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (plus Zero lf2))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (mult Zero Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (plus Zero Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult lf2 (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 (mult Zero lf2))
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 (plus Zero lf2))
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 (mult Zero Zero))
;;
let synth (lf2:natural)  =
  plus Zero (plus lf2 (plus Zero Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Succ (Succ (lf2))))) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Succ (Succ (lf2))))) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (mult Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (mult Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (plus Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (plus Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (mult lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (mult lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (mult lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (mult lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (plus lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (plus lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (plus lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (mult (plus lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (plus (mult Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus (mult Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (plus (plus Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus (plus Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (plus (mult lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus (mult lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (plus (mult lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus (mult lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (plus (plus lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus (plus lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (plus (plus lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  plus Zero (plus (plus lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult Zero (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Succ (Succ (Zero)))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult lf2 (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult lf2 (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Succ (Succ (lf2)))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Succ (Succ (lf2)))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Zero))) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) Zero) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Zero)))) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) Zero) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (Zero))))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  plus (plus Zero (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  plus (plus (mult Zero Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (mult Zero Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (plus Zero Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Succ (Zero))))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (mult Zero Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult Zero (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult (Succ (Zero)) Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Zero)) (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Succ (Zero))) Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Zero))) (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Succ (Zero)))) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (mult Zero Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (mult Zero Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (plus Zero Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Succ (Zero))))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (plus Zero Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus Zero (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus (Succ (Zero)) Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Zero)) (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Succ (Zero))) Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Zero))) (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Succ (Zero)))) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Zero)))) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (plus Zero Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Succ (Zero))))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Zero))))))))) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (plus (plus Zero Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Succ (lf2)))))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (mult Zero lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (plus Zero lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (mult lf2 lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (mult lf2 Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (plus lf2 lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (plus lf2 Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult Zero (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus Zero (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult (Succ (Zero)) lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus (Succ (Zero)) lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult lf2 (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult lf2 (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus lf2 (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus lf2 (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult (Succ (lf2)) lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult (Succ (lf2)) Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus (Succ (lf2)) lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus (Succ (lf2)) Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult Zero (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus Zero (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (Zero)) (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (Zero)) (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (Succ (Zero))) lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (Succ (Zero))) lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult lf2 (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult lf2 (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus lf2 (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus lf2 (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (lf2)) (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (lf2)) (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (lf2)) (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (lf2)) (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (Succ (lf2))) lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (Succ (lf2))) Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (Succ (lf2))) lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (Succ (lf2))) Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult Zero (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus Zero (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Zero)) (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Zero)) (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (Zero))) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (Zero))) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (Succ (Zero)))) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (Succ (Zero)))) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult lf2 (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult lf2 (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus lf2 (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus lf2 (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (lf2)) (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (lf2)) (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (lf2)) (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (lf2)) (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (lf2))) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (lf2))) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (lf2))) (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (lf2))) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (Succ (lf2)))) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (Succ (lf2)))) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (Succ (lf2)))) lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (Succ (lf2)))) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Zero)) (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Zero)) (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Zero))) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Zero))) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (Zero)))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (Zero)))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (mult Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (mult Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (plus Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (Succ (Zero))))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (plus Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (Succ (Zero))))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult lf2 (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (mult Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (plus Zero lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus lf2 (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (lf2)) (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (lf2)) (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (lf2)) (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (lf2)) (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (lf2))) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (lf2))) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (lf2))) (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (lf2))) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (lf2)))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (lf2)))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (lf2)))) (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (lf2)))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (Succ (lf2))))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (Succ (lf2))))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (mult Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (mult Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (plus Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (plus Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (mult lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (mult lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (mult lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (mult lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (plus lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (plus lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (plus lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (plus lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (Succ (lf2))))) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (Succ (lf2))))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (mult Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (mult Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (plus Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (plus Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (mult lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (mult lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (mult lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (mult lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (plus lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (plus lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (plus lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (plus lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (mult Zero Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult Zero (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (mult (Succ (Zero)) Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult Zero (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (Zero)) (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (mult (Succ (Succ (Zero))) Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult Zero (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Zero)) (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (Zero))) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (mult (Succ (Succ (Succ (Zero)))) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (mult Zero (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Zero)) (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Zero))) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (Zero)))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (mult Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (mult Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (plus Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (mult (Succ (Succ (Succ (Succ (Zero))))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (plus Zero Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus Zero (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (plus (Succ (Zero)) Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus Zero (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (Zero)) (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (plus (Succ (Succ (Zero))) Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus Zero (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Zero)) (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (Zero))) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (plus (Succ (Succ (Succ (Zero)))) Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult lf2 (plus Zero (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Zero)) (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Zero))) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (Zero)))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult lf2 (plus (plus Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (plus (Succ (Succ (Succ (Succ (Zero))))) Zero)
;;
let synth (lf2:natural)  =
  mult lf2 (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Zero)))))))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (mult Zero lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (plus Zero lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero (mult Zero lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero (plus Zero lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (plus (mult Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (mult Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (plus Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Succ (Succ (Zero))))) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (plus Zero Zero) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (Succ (Succ (Succ (Succ (lf2))))))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (mult Zero lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (plus Zero lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (mult Zero Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (plus Zero Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult lf2 (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 (mult Zero lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 (plus Zero lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 (mult lf2 lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 (mult lf2 Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 (plus lf2 lf2))
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 (plus lf2 Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 (mult Zero Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (plus lf2 (plus Zero Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Succ (Succ (lf2))))) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Succ (Succ (lf2))))) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (mult Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (mult Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (plus Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (plus Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (mult lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (mult lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (mult lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (mult lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (plus lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (plus lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (plus lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (plus lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (mult Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (mult Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (plus Zero lf2) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (plus Zero lf2) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (mult lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (mult lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (mult lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (mult lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (plus lf2 lf2) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (plus lf2 lf2) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (plus lf2 Zero) lf2)
;;
let synth (lf2:natural)  =
  plus lf2 (plus (plus lf2 Zero) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero (mult Zero Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (mult Zero Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (plus Zero Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (mult Zero (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  plus lf2 (plus (mult Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (mult Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (plus Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (mult (Succ (Succ (Succ (Succ (Zero))))) Zero)
;;
let synth (lf2:natural)  =
  plus lf2 (plus Zero (plus Zero Zero))
;;
let synth (lf2:natural)  =
  plus lf2 (plus (plus Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult Zero (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Succ (Succ (Zero)))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult lf2 (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult lf2 (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Succ (Succ (lf2)))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Succ (Succ (lf2)))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult Zero (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (Succ (lf2)) (mult (Succ (Succ (Succ (Zero)))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult Zero (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult (Succ (Succ (Zero))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult lf2 (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult lf2 (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult (Succ (Succ (lf2))) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult (Succ (Succ (lf2))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (lf2))) (mult (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult Zero (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult lf2 (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult (Succ (lf2)) lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult (Succ (lf2)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (lf2)))) (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (lf2))))) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero lf2) (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (plus Zero lf2) (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult lf2 lf2) (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult lf2 Zero) (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (plus lf2 lf2) (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (Succ (Succ (Succ (Succ (lf2)))))
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (plus lf2 Zero) (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  plus (mult Zero lf2) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero lf2) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  plus (mult lf2 lf2) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  plus (mult lf2 Zero) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  plus (plus lf2 lf2) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) (mult Zero lf2)
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) (plus Zero lf2)
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) (mult lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) (mult lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) (plus lf2 lf2)
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) (plus lf2 Zero)
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  plus (plus lf2 Zero) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (lf2))) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (lf2))) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) lf2) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) lf2) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (lf2))) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (lf2))) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Zero))) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Zero))) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) lf2) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) lf2) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) Zero) (Succ (Succ (Succ (lf2))))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) Zero) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (lf2)))) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (lf2)))) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) lf2) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) lf2) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (lf2)))) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (lf2)))) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Zero)))) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Zero)))) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) lf2) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) lf2) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) Zero) (Succ (Succ (lf2)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) Zero) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (lf2))))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (lf2))))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (lf2))))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (lf2))))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (Zero))))) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (Zero))))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) lf2) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) lf2) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) Zero) (Succ (lf2))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Succ (lf2))))))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Succ (lf2))))))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (mult Zero lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (mult Zero lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (plus Zero lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (plus Zero lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (mult lf2 lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (mult lf2 lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (mult lf2 Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (mult lf2 Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (plus lf2 lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (plus lf2 lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (plus lf2 Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (plus lf2 Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult Zero (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult Zero (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus Zero (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus Zero (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult (Succ (Zero)) lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult (Succ (Zero)) lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus (Succ (Zero)) lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus (Succ (Zero)) lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult lf2 (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult lf2 (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult lf2 (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult lf2 (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus lf2 (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus lf2 (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus lf2 (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus lf2 (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult (Succ (lf2)) lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult (Succ (lf2)) lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult (Succ (lf2)) Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult (Succ (lf2)) Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus (Succ (lf2)) lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus (Succ (lf2)) lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus (Succ (lf2)) Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus (Succ (lf2)) Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Zero)) (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Zero)) (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Zero)) (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Zero)) (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Succ (Zero))) lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Succ (Zero))) lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Succ (Zero))) lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Succ (Zero))) lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult lf2 (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus lf2 (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (lf2)) (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (lf2)) (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (lf2)) (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (lf2)) (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (lf2)) (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (lf2)) (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (lf2)) (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (lf2)) (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Succ (lf2))) lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Succ (lf2))) lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Succ (lf2))) Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Succ (lf2))) Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Succ (lf2))) lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Succ (lf2))) lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Succ (lf2))) Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Succ (lf2))) Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Zero))) (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Zero))) (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Zero))) (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Zero))) (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Succ (Zero)))) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Succ (Zero)))) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Succ (Zero)))) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Succ (Zero)))) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult lf2 (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus lf2 (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (lf2)) (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (lf2)) (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (lf2))) (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (lf2))) (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (lf2))) (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (lf2))) (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (lf2))) (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (lf2))) (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (lf2))) (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (lf2))) (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Succ (lf2)))) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Succ (lf2)))) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Succ (lf2)))) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Succ (lf2)))) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Succ (lf2)))) lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Succ (lf2)))) lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Succ (lf2)))) Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Succ (lf2)))) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult Zero (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus Zero (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Zero)))) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Zero)))) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (mult Zero Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (mult Zero Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (mult Zero Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (mult Zero Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (plus Zero Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (plus Zero Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Succ (Zero))))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Succ (Zero))))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (plus Zero Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (plus Zero Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Succ (Zero))))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Succ (Zero))))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult lf2 (Succ (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus lf2 (Succ (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (lf2)) (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Succ (Succ (lf2))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Succ (Succ (lf2))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Succ (Succ (Zero))))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (lf2)) (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (lf2))) (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) (Succ (Succ (lf2)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) (Succ (Succ (lf2)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) (Succ (Succ (Zero)))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (lf2))) (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (lf2)))) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (lf2)))) (Succ (lf2))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (lf2)))) (Succ (lf2))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (lf2)))) (Succ (Zero))) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (lf2)))) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Succ (lf2))))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Succ (lf2))))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Succ (lf2))))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Succ (lf2))))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (mult Zero lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (mult Zero lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (mult Zero lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (mult Zero lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (plus Zero lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (plus Zero lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (plus Zero lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (plus Zero lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (mult lf2 lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (mult lf2 lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (mult lf2 lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (mult lf2 lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (mult lf2 Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (mult lf2 Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (mult lf2 Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (mult lf2 Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (plus lf2 lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (plus lf2 lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (plus lf2 lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (plus lf2 lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (plus lf2 Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (mult (plus lf2 Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (mult (plus lf2 Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (mult (plus lf2 Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Succ (lf2))))) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Succ (lf2))))) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Succ (lf2))))) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Succ (lf2))))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (mult Zero lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (mult Zero lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (mult Zero lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (mult Zero lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (plus Zero lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (plus Zero lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (plus Zero lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (plus Zero lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (mult lf2 lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (mult lf2 lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (mult lf2 lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (mult lf2 lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (mult lf2 Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (mult lf2 Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (mult lf2 Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (mult lf2 Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (plus lf2 lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (plus lf2 lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (plus lf2 lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (plus lf2 lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (plus lf2 Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  mult (plus (plus lf2 Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  mult (plus (plus lf2 Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  mult (plus (plus lf2 Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult Zero (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (plus Zero (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (plus Zero (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (plus Zero (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (plus Zero (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (plus Zero (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (plus Zero (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (plus Zero (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (plus (mult Zero Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus (mult Zero Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (mult Zero Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (mult Zero Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (plus Zero Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (plus Zero Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Succ (Zero))))) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Succ (Zero))))) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus (plus Zero Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus (plus Zero Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Succ (Succ (lf2)))))) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Succ (Succ (lf2)))))) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Succ (Succ (Zero)))))) lf2
;;
let synth (lf2:natural)  =
  plus (mult lf2 (Succ (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 (mult Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 (mult Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 (plus Zero lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 (plus Zero lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 (mult lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 (mult lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 (mult lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 (mult lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 (plus lf2 lf2)) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 (plus lf2 lf2)) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 (plus lf2 Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 (plus lf2 Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 (mult Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (plus lf2 (plus Zero Zero)) lf2
;;
let synth (lf2:natural)  =
  plus (plus lf2 (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Succ (lf2))))) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Succ (lf2))))) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Succ (lf2))))) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Succ (lf2))))) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (mult Zero lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (mult Zero lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (mult Zero lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (mult Zero lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (plus Zero lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (plus Zero lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (plus Zero lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (plus Zero lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (mult lf2 lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (mult lf2 lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (mult lf2 lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (mult lf2 lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (mult lf2 Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (mult lf2 Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (mult lf2 Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (mult lf2 Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (plus lf2 lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (plus lf2 lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (plus lf2 lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (plus lf2 lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (plus lf2 Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (mult (plus lf2 Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (mult (plus lf2 Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (mult (plus lf2 Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (plus (mult Zero lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus (mult Zero lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus (mult Zero lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (plus (mult Zero lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (plus (plus Zero lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus (plus Zero lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus (plus Zero lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (plus (plus Zero lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (plus (mult lf2 lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus (mult lf2 lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus (mult lf2 lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (plus (mult lf2 lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (plus (mult lf2 Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus (mult lf2 Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus (mult lf2 Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (plus (mult lf2 Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (plus (plus lf2 lf2) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus (plus lf2 lf2) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus (plus lf2 lf2) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (plus (plus lf2 lf2) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (plus (plus lf2 Zero) lf2) lf2
;;
let synth (lf2:natural)  =
  plus (plus (plus lf2 Zero) lf2) Zero
;;
let synth (lf2:natural)  =
  plus (plus (plus lf2 Zero) Zero) lf2
;;
let synth (lf2:natural)  =
  plus (plus (plus lf2 Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero (mult Zero Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (mult Zero Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (plus Zero Zero))
;;
let synth (lf2:natural)  =
  plus Zero (mult Zero (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  plus Zero (plus (mult Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (mult Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (plus Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  plus Zero (mult (Succ (Succ (Succ (Succ (Zero))))) Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (mult Zero Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult Zero (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (mult (Succ (Zero)) Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult Zero (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (Zero)) (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (mult (Succ (Succ (Zero))) Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult Zero (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Zero)) (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (Zero))) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (mult (Succ (Succ (Succ (Zero)))) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (mult Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (mult Zero (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Zero)) (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Zero))) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (Zero)))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (mult Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (mult Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (plus Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (mult (Succ (Succ (Succ (Succ (Zero))))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (plus Zero Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus Zero (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (plus (Succ (Zero)) Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus Zero (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (Zero)) (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (plus (Succ (Succ (Zero))) Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus Zero (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Zero)) (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (Zero))) (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (Succ (plus (Succ (Succ (Succ (Zero)))) Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (plus Zero Zero))
;;
let synth (lf2:natural)  =
  mult Zero (plus Zero (Succ (Succ (Succ (Succ (Zero))))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Zero)) (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Zero))) (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (Zero)))) (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult Zero (plus (plus Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (plus (Succ (Succ (Succ (Succ (Zero))))) Zero)
;;
let synth (lf2:natural)  =
  mult Zero (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Zero)))))))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult Zero (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (Succ (Zero)) (mult (Succ (Succ (Succ (Zero)))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult Zero (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Zero))) (mult (Succ (Succ (Zero))) Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult Zero (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Zero)))) (mult (Succ (Zero)) Zero)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  plus (mult Zero Zero) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero Zero) (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (plus Zero Zero) (Succ (Succ (Succ (Succ (Zero)))))
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) (mult Zero Zero)
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Zero))))) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Zero))) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) Zero) (Succ (Succ (Succ (Zero))))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Zero)))) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) Zero) (Succ (Succ (Zero)))
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (Zero))))) (Succ (Zero))
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) Zero) (Succ (Zero))
;;
let synth (lf2:natural)  =
  plus (plus Zero (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (mult Zero (Succ (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  plus (plus (mult Zero Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (mult Zero Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (plus Zero Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  plus (mult (Succ (Succ (Succ (Succ (Zero))))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (mult Zero Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult Zero (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (mult (Succ (Zero)) Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult Zero (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Zero)) (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (mult (Succ (Succ (Zero))) Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult Zero (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Zero)) (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Zero))) (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (mult (Succ (Succ (Succ (Zero)))) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (mult Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (mult Zero (Succ (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Zero)) (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Zero))) (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Zero)))) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (mult Zero Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (mult Zero Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (plus Zero Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (mult (Succ (Succ (Succ (Succ (Zero))))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (plus Zero Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus Zero (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (plus (Succ (Zero)) Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus Zero (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Zero)) (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (plus (Succ (Succ (Zero))) Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus Zero (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Zero)) (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Zero))) (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (plus (Succ (Succ (Succ (Zero)))) Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  mult (plus Zero (Succ (Succ (Succ (Succ (Zero)))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Zero)) (Succ (Succ (Succ (Zero))))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Zero))) (Succ (Succ (Zero)))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Zero)))) (Succ (Zero))) Zero
;;
let synth (lf2:natural)  =
  mult (plus (plus Zero Zero) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (plus (Succ (Succ (Succ (Succ (Zero))))) Zero) Zero
;;
let synth (lf2:natural)  =
  mult (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Succ (Zero))))))))) Zero
;;
let synth (lf2:natural)  =
  plus Zero (plus Zero (plus Zero Zero))
;;
let synth (lf2:natural)  =
  plus Zero (plus (plus Zero Zero) Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero Zero) (plus Zero Zero)
;;
let synth (lf2:natural)  =
  plus (plus Zero (plus Zero Zero)) Zero
;;
let synth (lf2:natural)  =
  plus (plus (plus Zero Zero) Zero) Zero
;;
