let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult z y) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult y z) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult z y)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult y z)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus Zero (plus (mult z y) lf2)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus Zero (plus (mult y z) lf2)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus Zero (plus lf2 (mult z y))
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus Zero (plus lf2 (mult y z))
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult z y) (plus Zero lf2)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult z y) (plus lf2 Zero)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult y z) (plus Zero lf2)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult y z) (plus lf2 Zero)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult z (plus Zero y)) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult z (plus y Zero)) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus Zero (mult z y)) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus Zero (mult y z)) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult (plus Zero z) y) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult (plus z Zero) y) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult y (plus Zero z)) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult y (plus z Zero)) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult (plus Zero y) z) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (mult (plus y Zero) z) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus (mult z y) Zero) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus (mult y z) Zero) lf2
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult z (plus Zero y))
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult z (plus y Zero))
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (plus Zero (mult z y))
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (plus Zero (mult y z))
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult (plus Zero z) y)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult (plus z Zero) y)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult y (plus Zero z))
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult y (plus z Zero))
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult (plus Zero y) z)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (mult (plus y Zero) z)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (plus (mult z y) Zero)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus lf2 (plus (mult y z) Zero)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus Zero lf2) (mult z y)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus Zero lf2) (mult y z)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus lf2 Zero) (mult z y)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus lf2 Zero) (mult y z)
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus (mult z y) lf2) Zero
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus (mult y z) lf2) Zero
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus lf2 (mult z y)) Zero
;;
let synth (z:natural) (y:natural) (lf2:natural)  =
  plus (plus lf2 (mult y z)) Zero
;;
