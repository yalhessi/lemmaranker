
### Generalization Stat ###
Generalized Conjecture : conj72: forall  (y:lst) (x:lst) (n:natural) , (@eq lst (append (append (rev y) (rev x)) (Cons n Nil)) (append (rev y) (append (rev x) (Cons n Nil))))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj69: forall  (y:lst)(lf1:lst) (n:natural) , (@eq lst (append (append (rev y) lf1) (Cons n Nil)) (append (rev y) (append lf1 (Cons n Nil))))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj66: forall (lf1:lst) (x:lst) (n:natural) , (@eq lst (append (append lf1 (rev x)) (Cons n Nil)) (append lf1 (append (rev x) (Cons n Nil))))
is_valid : true
is_prover_provable (be proven by proverbot): true
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj63: forall (lf1:lst)(lf2:lst) (n:natural) , (@eq lst (append (append lf1 lf2) (Cons n Nil)) (append lf1 (append lf2 (Cons n Nil))))
is_valid : true
is_prover_provable (be proven by proverbot): true
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj49: forall  (y:lst) (x:lst) (n:natural)(lf1:lst) , (@eq lst (append (append (rev y) (rev x)) (Cons n lf1)) (append (rev y) (append (rev x) (Cons n lf1))))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj46: forall  (y:lst) (x:lst)(lf1:lst) , (@eq lst (append (append (rev y) (rev x)) lf1) (append (rev y) (append (rev x) lf1)))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj43: forall  (y:lst)(lf1:lst) (n:natural)(lf2:lst) , (@eq lst (append (append (rev y) lf1) (Cons n lf2)) (append (rev y) (append lf1 (Cons n lf2))))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj40: forall  (y:lst)(lf2:lst)(lf1:lst) , (@eq lst (append (append (rev y) lf2) lf1) (append (rev y) (append lf2 lf1)))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj37: forall (lf1:lst) (x:lst) (n:natural)(lf2:lst) , (@eq lst (append (append lf1 (rev x)) (Cons n lf2)) (append lf1 (append (rev x) (Cons n lf2))))
is_valid : true
is_prover_provable (be proven by proverbot): true
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj34: forall (lf2:lst) (x:lst)(lf1:lst) , (@eq lst (append (append lf2 (rev x)) lf1) (append lf2 (append (rev x) lf1)))
is_valid : true
is_prover_provable (be proven by proverbot): true
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj31: forall (lf1:lst)(lf2:lst) (n:natural)(lf3:lst) , (@eq lst (append (append lf1 lf2) (Cons n lf3)) (append lf1 (append lf2 (Cons n lf3))))
is_valid : true
is_prover_provable (be proven by proverbot): true
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj28: forall (lf2:lst)(lf3:lst)(lf1:lst) , (@eq lst (append (append lf2 lf3) lf1) (append lf2 (append lf3 lf1)))
is_valid : true
is_prover_provable (be proven by proverbot): true
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj24_hyp: forall (lf1:lst)(lf2:lst) (y:lst) (x:lst), (@eq lst (rev (append x y)) lf1) ->  (@eq lst (append lf1 lf2) (append (rev y) (append (rev x) lf2)))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj25_hyp: forall (lf1:lst) (n:natural)(lf2:lst) (y:lst) (x:lst), (@eq lst (rev (append x y)) lf1) ->  (@eq lst (append lf1 (Cons n lf2)) (append (rev y) (append (rev x) (Cons n lf2))))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj60_hyp: forall (lf1:lst) (n:natural) (y:lst) (x:lst), (@eq lst (rev (append x y)) lf1) ->  (@eq lst (append lf1 (Cons n Nil)) (append (rev y) (append (rev x) (Cons n Nil))))
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  

