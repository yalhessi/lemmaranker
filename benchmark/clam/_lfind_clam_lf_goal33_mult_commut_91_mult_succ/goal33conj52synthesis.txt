let synth (lf2:natural) (y:natural)  =
  mult lf2 y
;;
let synth (lf2:natural) (y:natural)  =
  mult y lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus Zero y)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus y Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult lf2 y)
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult y lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero lf2) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 Zero) y
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus Zero lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus lf2 Zero)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero y) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y Zero) lf2
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 y) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y lf2) Zero
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (mult (Succ (Zero)) y)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (mult y (Succ (Zero)))
;;
let synth (lf2:natural) (y:natural)  =
  mult (Succ (Zero)) (mult lf2 y)
;;
let synth (lf2:natural) (y:natural)  =
  mult (Succ (Zero)) (mult y lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult (mult (Succ (Zero)) lf2) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (mult lf2 (Succ (Zero))) y
;;
let synth (lf2:natural) (y:natural)  =
  mult y (mult (Succ (Zero)) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (mult lf2 (Succ (Zero)))
;;
let synth (lf2:natural) (y:natural)  =
  mult (mult lf2 y) (Succ (Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult (mult y lf2) (Succ (Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult (mult (Succ (Zero)) y) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (mult y (Succ (Zero))) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus Zero (plus Zero y))
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus Zero (plus y Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus (mult Zero lf2) y)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus (mult lf2 Zero) y)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus (mult Zero Zero) y)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus (plus Zero Zero) y)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus y (mult Zero y))
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus y (mult y Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus y (mult Zero lf2))
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus y (mult lf2 Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus y (mult Zero Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus y (plus Zero Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus (mult Zero y) y)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus (plus Zero y) Zero)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus (mult y Zero) y)
;;
let synth (lf2:natural) (y:natural)  =
  mult lf2 (plus (plus y Zero) Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult lf2 (plus Zero y))
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult lf2 (plus y Zero))
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (plus Zero (mult lf2 y))
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (plus Zero (mult y lf2))
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult (plus Zero lf2) y)
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult (plus lf2 Zero) y)
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult y (plus Zero lf2))
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult y (plus lf2 Zero))
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult (plus Zero y) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (mult (plus y Zero) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (plus (mult lf2 y) Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus Zero (plus (mult y lf2) Zero)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero lf2) (plus Zero y)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero lf2) (plus y Zero)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 Zero) (plus Zero y)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 Zero) (plus y Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult Zero lf2) (mult lf2 y)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult Zero lf2) (mult y lf2)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 Zero) (mult lf2 y)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 Zero) (mult y lf2)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult Zero Zero) (mult lf2 y)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult Zero Zero) (mult y lf2)
;;
let synth (lf2:natural) (y:natural)  =
  plus (plus Zero Zero) (mult lf2 y)
;;
let synth (lf2:natural) (y:natural)  =
  plus (plus Zero Zero) (mult y lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero (plus Zero lf2)) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero (plus lf2 Zero)) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult Zero Zero) lf2) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (plus Zero Zero) lf2) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 (mult Zero lf2)) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 (mult lf2 Zero)) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 (mult Zero Zero)) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 (plus Zero Zero)) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult Zero lf2) lf2) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (plus Zero lf2) Zero) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult lf2 Zero) lf2) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (plus lf2 Zero) Zero) y
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus lf2 (mult Zero y))
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus lf2 (mult y Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus (mult Zero y) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus (mult y Zero) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus Zero (plus Zero lf2))
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus Zero (plus lf2 Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus (mult Zero Zero) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus (plus Zero Zero) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus lf2 (mult Zero lf2))
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus lf2 (mult lf2 Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus lf2 (mult Zero Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus lf2 (plus Zero Zero))
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus (mult Zero lf2) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus (plus Zero lf2) Zero)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus (mult lf2 Zero) lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult y (plus (plus lf2 Zero) Zero)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero y) (plus Zero lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero y) (plus lf2 Zero)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y Zero) (plus Zero lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y Zero) (plus lf2 Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 y) (mult Zero y)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 y) (mult y Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 y) (mult Zero lf2)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 y) (mult lf2 Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 y) (mult Zero Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 y) (plus Zero Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult Zero y) (mult lf2 y)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult Zero y) (mult y lf2)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y lf2) (mult Zero y)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y lf2) (mult y Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y lf2) (mult Zero lf2)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y lf2) (mult lf2 Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y lf2) (mult Zero Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y lf2) (plus Zero Zero)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y Zero) (mult lf2 y)
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y Zero) (mult y lf2)
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 (mult Zero y)) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus lf2 (mult y Zero)) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero (plus Zero y)) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus Zero (plus y Zero)) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult Zero lf2) y) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult lf2 Zero) y) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult Zero Zero) y) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (plus Zero Zero) y) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y (mult Zero y)) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y (mult y Zero)) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y (mult Zero lf2)) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y (mult lf2 Zero)) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y (mult Zero Zero)) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus y (plus Zero Zero)) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult Zero y) y) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult Zero y) lf2) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (plus Zero y) Zero) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult y Zero) y) lf2
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (mult y Zero) lf2) y
;;
let synth (lf2:natural) (y:natural)  =
  mult (plus (plus y Zero) Zero) lf2
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 (plus Zero y)) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult lf2 (plus y Zero)) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (plus Zero (mult lf2 y)) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (plus Zero (mult y lf2)) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult (plus Zero lf2) y) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult (plus lf2 Zero) y) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y (plus Zero lf2)) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult y (plus lf2 Zero)) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult (plus Zero y) lf2) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (mult (plus y Zero) lf2) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (plus (mult lf2 y) Zero) Zero
;;
let synth (lf2:natural) (y:natural)  =
  plus (plus (mult y lf2) Zero) Zero
;;
