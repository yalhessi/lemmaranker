
### Generalization Stat ###
Generalized Conjecture : conj4_hyp: forall  (x:lst)(lf1:lst) (y:lst)(lf2:bool), (@eq bool (lst_subset (lst_intersection x y) x) lf2) -> (@eq bool (lst_subset x (lst_intersection x y)) lf2) -> (forall _ : @eq bool (lst_subset x y) true, @eq bool (lst_eq (lst_intersection x y) x) lf2) ->  (@eq bool (lst_subset x (append lf1 (lst_intersection x y))) lf2)
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj6_hyp: forall  (x:lst) (n:natural) (y:lst)(lf1:bool), (@eq bool (lst_subset (lst_intersection x y) x) lf1) -> (@eq bool (lst_subset x (lst_intersection x y)) lf1) -> (forall _ : @eq bool (lst_subset x y) true, @eq bool (lst_eq (lst_intersection x y) x) lf1) ->  (@eq bool (lst_subset x (append (Cons n Nil) (lst_intersection x y))) lf1)
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj9_hyp: forall  (x:lst)(lf2:lst)(lf1:lst), (@eq bool (lst_subset x lf1) true) ->  (@eq bool (lst_subset x (append lf2 lf1)) true)
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj10_hyp: forall  (x:lst)(lf1:lst) (y:lst), (@eq bool (lst_subset x (lst_intersection x y)) true) ->  (@eq bool (lst_subset x (append lf1 (lst_intersection x y))) true)
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  


### Generalization Stat ###
Generalized Conjecture : conj12_hyp: forall  (x:lst) (n:natural) (y:lst), (@eq bool (lst_subset x (lst_intersection x y)) true) -> (@eq bool (lst_mem n y) true) ->  (@eq bool (lst_subset x (append (Cons n Nil) (lst_intersection x y))) true)
is_valid : true
is_prover_provable (be proven by proverbot): false
is_provable (can help prove original goal): true
Synthesis Stats : 
  

