let synth (lf1:natural) (x:natural)  =
  mult lf1 x
;;
let synth (lf1:natural) (x:natural)  =
  mult x lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus Zero x)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus x Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult lf1 x)
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult x lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero lf1) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 Zero) x
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus Zero lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus lf1 Zero)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero x) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x Zero) lf1
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 x) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x lf1) Zero
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (mult (Succ (Zero)) x)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (mult x (Succ (Zero)))
;;
let synth (lf1:natural) (x:natural)  =
  mult (Succ (Zero)) (mult lf1 x)
;;
let synth (lf1:natural) (x:natural)  =
  mult (Succ (Zero)) (mult x lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult (mult (Succ (Zero)) lf1) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (mult lf1 (Succ (Zero))) x
;;
let synth (lf1:natural) (x:natural)  =
  mult x (mult (Succ (Zero)) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (mult lf1 (Succ (Zero)))
;;
let synth (lf1:natural) (x:natural)  =
  mult (mult lf1 x) (Succ (Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult (mult x lf1) (Succ (Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult (mult (Succ (Zero)) x) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (mult x (Succ (Zero))) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus Zero (plus Zero x))
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus Zero (plus x Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus (mult Zero lf1) x)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus (mult lf1 Zero) x)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus (mult Zero Zero) x)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus (plus Zero Zero) x)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus x (mult Zero x))
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus x (mult x Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus x (mult Zero lf1))
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus x (mult lf1 Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus x (mult Zero Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus x (plus Zero Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus (mult Zero x) x)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus (plus Zero x) Zero)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus (mult x Zero) x)
;;
let synth (lf1:natural) (x:natural)  =
  mult lf1 (plus (plus x Zero) Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult lf1 (plus Zero x))
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult lf1 (plus x Zero))
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (plus Zero (mult lf1 x))
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (plus Zero (mult x lf1))
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult (plus Zero lf1) x)
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult (plus lf1 Zero) x)
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult x (plus Zero lf1))
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult x (plus lf1 Zero))
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult (plus Zero x) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (mult (plus x Zero) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (plus (mult lf1 x) Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus Zero (plus (mult x lf1) Zero)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero lf1) (plus Zero x)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero lf1) (plus x Zero)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 Zero) (plus Zero x)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 Zero) (plus x Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult Zero lf1) (mult lf1 x)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult Zero lf1) (mult x lf1)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 Zero) (mult lf1 x)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 Zero) (mult x lf1)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult Zero Zero) (mult lf1 x)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult Zero Zero) (mult x lf1)
;;
let synth (lf1:natural) (x:natural)  =
  plus (plus Zero Zero) (mult lf1 x)
;;
let synth (lf1:natural) (x:natural)  =
  plus (plus Zero Zero) (mult x lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero (plus Zero lf1)) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero (plus lf1 Zero)) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult Zero Zero) lf1) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (plus Zero Zero) lf1) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 (mult Zero lf1)) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 (mult lf1 Zero)) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 (mult Zero Zero)) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 (plus Zero Zero)) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult Zero lf1) lf1) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (plus Zero lf1) Zero) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult lf1 Zero) lf1) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (plus lf1 Zero) Zero) x
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus lf1 (mult Zero x))
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus lf1 (mult x Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus (mult Zero x) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus (mult x Zero) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus Zero (plus Zero lf1))
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus Zero (plus lf1 Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus (mult Zero Zero) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus (plus Zero Zero) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus lf1 (mult Zero lf1))
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus lf1 (mult lf1 Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus lf1 (mult Zero Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus lf1 (plus Zero Zero))
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus (mult Zero lf1) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus (plus Zero lf1) Zero)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus (mult lf1 Zero) lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult x (plus (plus lf1 Zero) Zero)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero x) (plus Zero lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero x) (plus lf1 Zero)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x Zero) (plus Zero lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x Zero) (plus lf1 Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 x) (mult Zero x)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 x) (mult x Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 x) (mult Zero lf1)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 x) (mult lf1 Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 x) (mult Zero Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 x) (plus Zero Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult Zero x) (mult lf1 x)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult Zero x) (mult x lf1)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x lf1) (mult Zero x)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x lf1) (mult x Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x lf1) (mult Zero lf1)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x lf1) (mult lf1 Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x lf1) (mult Zero Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x lf1) (plus Zero Zero)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x Zero) (mult lf1 x)
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x Zero) (mult x lf1)
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 (mult Zero x)) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus lf1 (mult x Zero)) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero (plus Zero x)) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus Zero (plus x Zero)) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult Zero lf1) x) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult lf1 Zero) x) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult Zero Zero) x) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (plus Zero Zero) x) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x (mult Zero x)) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x (mult x Zero)) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x (mult Zero lf1)) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x (mult lf1 Zero)) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x (mult Zero Zero)) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus x (plus Zero Zero)) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult Zero x) x) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult Zero x) lf1) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (plus Zero x) Zero) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult x Zero) x) lf1
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (mult x Zero) lf1) x
;;
let synth (lf1:natural) (x:natural)  =
  mult (plus (plus x Zero) Zero) lf1
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 (plus Zero x)) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult lf1 (plus x Zero)) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (plus Zero (mult lf1 x)) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (plus Zero (mult x lf1)) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult (plus Zero lf1) x) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult (plus lf1 Zero) x) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x (plus Zero lf1)) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult x (plus lf1 Zero)) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult (plus Zero x) lf1) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (mult (plus x Zero) lf1) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (plus (mult lf1 x) Zero) Zero
;;
let synth (lf1:natural) (x:natural)  =
  plus (plus (mult x lf1) Zero) Zero
;;
